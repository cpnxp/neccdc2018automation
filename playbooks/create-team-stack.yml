# FILENAME
# create-team-stack.yml
#
# DESCRIPTION
# Deploys a four phase stack
# 
# REQUIREMENTS
# 
# pip install boto3
# pip install botocore
# pip install ansible
# ansible-galaxy install PaloAltoNetworks.paloaltonetworks
#
# EXECUTE
#
# Use default AWS credentials for testing if a team/school name is not provided
# Expected:  team=team9 school=unh
#
# Good practice: Passwords should NOT be provided in cleartext. They should be edited and encrypted using:
# ansible-vault encrypt firewall-secrets.yml
#
# ansible-playbook ./playbooks/create-team-stack.yml  --extra-vars "team=XXX campus=YYY sshkey=ZZZ"
#
---
- hosts: localhost
  connection: local
  gather_facts: False

  roles:
    - role: PaloAltoNetworks.paloaltonetworks
    
  vars:
    # Standalone deploys can use the default, event will teamX
    team_name: "{{ team | default('team1') }}"
    # Standalone deploys can use the default, event will use campus name XXX.edu
    school_name: "{{ campus| default('default') }}"
    # Competition: The SSH key will be the team's campus name XXX.edu
    key_name: "{{ sshkey | default('NECCDC') }}"
    # AMI selected are based in us-east-1
    region: "us-east-1"
    # Location of private key to configure deployed systems
    key_filename: "../../campus_data/{{ campus | default('NECCDC') }}.pem"
    # Palo Alto admin user
    admin_username: "admin"
    # Password defined for Palo Alto web interface
    admin_password: "Neccdc-2018"

  tasks:
    - name: Create stack for {{ school_name }} as {{ team_name }}
      cloudformation:
        stack_name: "NECCDC2018-{{ team_name }}"
        aws_access_key: "{{ lookup('ini', 'aws_access_key_id section={{ school_name }} file=~/.aws/credentials') }}"
        aws_secret_key: "{{ lookup('ini', 'aws_secret_access_key section={{ school_name }} file=~/.aws/credentials') }}"
        state: "present"
        region: "{{ region }}"
        disable_rollback: false
        template: "../templates/main-infrastructure.json"
        template_parameters:
          # This key is only known to the school and the event organizer
          pKeyName: "{{ key_name }}"
          # Artifact from Goldbase, CloudTrail is always turned on
          pCreateCloudTrail: "no"
        tags:
          Stack: "blueteam_infrastructure"
      register: cloudformation

    - name: FirewallManagementEIP
      debug:
         msg: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
    - name: rFwPublicIP
      debug:
         msg: "{{ cloudformation.stack_outputs.rFwPublicIP }}"
    - name: rFwPrivateIP
      debug:
         msg: "{{ cloudformation.stack_outputs.rFwPrivateIP }}"
    - name: wait for SSH prompt (timeout 10min)
      wait_for: port=22 host="{{ cloudformation.stack_outputs.FirewallManagementEIP }}" timeout=600
    - name: set admin password
      panos_admpwd: ip_address="{{ cloudformation.stack_outputs.FirewallManagementEIP }}" key_filename="{{ key_filename }}" newpassword="{{ admin_password }}"
      register: result
      until: not result | failed
      retries: 10
      delay: 30
    - name: configure ethernet1/1 for DHCP
      panos_interface:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        if_name: "ethernet1/1"
        zone_name: "public"
        create_default_route: "yes"
        commit: False
    - name: configure ethernet1/2 for DHCP
      panos_interface:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        if_name: "ethernet1/2"
        zone_name: "private"
        create_default_route: "no"
        commit: False
    - name: create a global service for TCP 22
      panos_object:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        serviceobject: 'ssh-22'
        destination_port: '22'
        protocol: 'tcp'
        description: 'ssh on 22'
    - name: create a global service for TCP 10000
      panos_object:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        serviceobject: 'service-http-10000'
        destination_port: '10000'
        protocol: 'tcp'
        description: 'http on 10000'
    - name: Create NAT rule for Web server
      panos_nat_rule:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        rule_name: "NATWeb"
        source_zone: ["public"]
        destination_zone: "public"
        source_ip: ["any"]
        destination_ip: ["10.0.0.100"]
        service: "service-http"
        snat_type: "dynamic-ip-and-port"
        snat_interface: "ethernet1/2"
        dnat_address: "10.0.1.101"
        dnat_port: "80"
        commit: "False"
    - name: Create NAT rule for SSH
      panos_nat_rule:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        rule_name: "NATSSH"
        source_zone: ["public"]
        destination_zone: "public"
        source_ip: ["any"]
        destination_ip: ["10.0.0.100"]
        service: "ssh-22"
        snat_type: "dynamic-ip-and-port"
        snat_interface: "ethernet1/2"
        dnat_address: "10.0.1.101"
        dnat_port: "22"
        commit: "False"
    - name: NAT All out
      panos_nat_rule:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        rule_name: "NATAllOut"
        source_zone: ["private"]
        destination_zone: "public"
        source_ip: ["any"]
        destination_ip: ["any"]
        snat_type: "dynamic-ip-and-port"
        snat_interface: "ethernet1/1"
        commit: "False"
    - name: add a rule to allow HTTP
      panos_security_rule:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        rule_name: 'Web traffic'
        service: 'service-http'
        description: 'Allow HTTP traffic'
        source_zone: ['public']
        destination_zone: ['private']
        action: 'allow'
        commit: "False"
    - name: add a rule to allow SSH
      panos_security_rule:
        ip_address: "{{ cloudformation.stack_outputs.FirewallManagementEIP }}"
        password: "{{ admin_password }}"
        operation: 'add'
        rule_name: 'SSH traffic'
        service: 'ssh-22'
        description: 'Allow SSH traffic'
        source_zone: ['public']
        destination_zone: ['private']
        action: 'allow'
        commit: "True"


